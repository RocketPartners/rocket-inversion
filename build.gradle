buildscript {
	ext {
		springBootVersion = '1.5.6.RELEASE'
	}
	repositories {
		mavenCentral()
	}
	dependencies {
		classpath("org.springframework.boot:spring-boot-gradle-plugin:${springBootVersion}")
	}
}

apply plugin: 'eclipse'
apply plugin: 'maven'
apply plugin: 'java'
apply plugin: 'org.springframework.boot'


//README uncomment the line below to use 'gradle build' to package a war.
//This file is shipped as a java plugin project not a war plugin project because
//other projects use jitpack to include the snooze api as a dependency.  If
//it were a war project by default jipack would serve the war not the jar which
//would be useless.
//apply plugin: 'war'

project.docsDirName='../docs/master/'

configurations.all { resolutionStrategy.cacheChangingModulesFor 0, 'seconds' }

version = '0.3.4'
group = 'com.github.RocketPartners'
sourceCompatibility = 1.8

ext {
   archiveRepo = "https://maven.pkg.github.com/RocketPartners/artifacts"
   archiveRepoUser = System.env.GHP_USER
   archiveRepoPassword = System.env.GHP_PASSWORD
   junitVersion = '5.8.1'
}

repositories {
   mavenLocal()
   mavenCentral()
   maven { url "http://redshift-maven-repository.s3-website-us-east-1.amazonaws.com/release" }
}

dependencies {

	compile 'org.springframework.boot:spring-boot-starter-web'
	compile 'org.springframework.boot:spring-boot-starter-actuator'
	compile 'org.springframework.boot:spring-boot-starter-jdbc'
	compile 'org.springframework.boot:spring-boot-starter-test'
	compile 'net.rakugakibox.spring.boot:logback-access-spring-boot-starter:2.6.0'

	compile group: 'org.apache.commons', name: 'commons-collections4', version: '4.3'
	compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.8.1'	
	compile group: 'org.apache.commons', name: 'commons-csv', version: '1.4'

	compile group: 'org.apache.httpcomponents', name: 'httpclient', version: '4.5.5'
	compile group: 'org.apache.httpcomponents', name: 'httpmime', version: '4.5.5'
   
	//aws libs
    //compile 'com.amazonaws:aws-java-sdk:1.11.547'
	compile 'com.amazonaws:aws-java-sdk-s3:1.11.390'
	compile 'com.amazonaws:aws-java-sdk-dynamodb:1.11.390'
	compile 'com.amazonaws:aws-java-sdk-kinesis:1.11.390'
	compile 'com.amazonaws:aws-lambda-java-core:1.2.0'
	compile 'com.amazonaws:aws-java-sdk-rds:1.11.542'

	// required for the Redis client
	compile group: 'redis.clients', name: 'jedis', version: '2.9.0'

    //drivers for supportd DBs
	compile group: 'com.zaxxer', name: 'HikariCP', version: '3.3.1' //required connection pool libs
	compile group: 'mysql', name: 'mysql-connector-java', version: '8.0.32'
	compile group: 'com.h2database', name: 'h2', version: '1.4.197'
	compile 'org.postgresql:postgresql:42.1.4'
	compile group: 'com.amazon.redshift', name: 'redshift-jdbc42-no-awssdk', version: '1.2.10.1009'
	// Beware of changing the redshift driver version. Newer versions of this driver are not thread-safe
	// Version 1.2.10.1009 is thread-safe
	// https://stackoverflow.com/questions/52884036/java-sql-sqlnontransientexception-amazonjdbc10900-not-all-parameters-have

  	//scripting with javascript via graalvm (from oracle and newer than rhino/nashorn)
	compile 'net.jodah:expiringmap:0.5.8'
	compile group: 'org.graalvm', name: 'graal-sdk', version: '1.0.0-rc7'
	compile group: 'com.oracle.truffle', name: 'truffle-api', version: '1.0.0-rc7'
	compile files('libs/graaljs.jar') //does not appear to be in maven yet
	compile files('libs/tregex.jar')  //does not appear to be in maven yet

	//scripting with velocity engine
	compile group: 'org.apache.velocity', name: 'velocity-engine-core', version: '2.0'
   compile group: 'commons-codec', name: 'commons-codec', version: '1.10'
   compile group: 'commons-collections', name: 'commons-collections', version: '3.2.1'
   compile group: 'org.apache.commons', name: 'commons-csv', version: '1.4'
   compile group: 'commons-httpclient', name: 'commons-httpclient', version: '3.1'
   compile group: 'org.apache.commons', name: 'commons-lang3', version: '3.4'


   // required for the Redis client
   compile group: 'redis.clients', name: 'jedis', version: '3.1.0'

   compile 'com.amazonaws:aws-java-sdk-s3:1.11.390'
   compile 'com.amazonaws:aws-java-sdk-dynamodb:1.11.390'
   compile 'com.amazonaws:aws-java-sdk-kinesis:1.11.390'

   // Beware of changing the redshift driver version. Newer versions of this driver are not thread-safe
   // Version 1.2.10.1009 is thread-safe
   // https://stackoverflow.com/questions/52884036/java-sql-sqlnontransientexception-amazonjdbc10900-not-all-parameters-have
   compile group: 'com.amazon.redshift', name: 'redshift-jdbc42-no-awssdk', version: '1.2.10.1009'

   compile group: 'com.auth0', name: 'java-jwt', version: '3.1.0'

   compile group: 'ch.qos.logback', name: 'logback-classic', version: '1.1.11'

   compile "javax.servlet:javax.servlet-api:3.1.0"

   compile 'net.jodah:expiringmap:0.5.8'
   compile group: 'org.graalvm', name: 'graal-sdk', version: '1.0.0-rc7'
   compile group: 'com.oracle.truffle', name: 'truffle-api', version: '1.0.0-rc7'
   compile files('libs/graaljs.jar')
   compile files('libs/tregex.jar')


   compile group: 'org.apache.velocity', name: 'velocity-engine-core', version: '2.0'
   //	compile group: 'org.apache.velocity', name: 'velocity-engine-scripting', version: '2.0'

    testImplementation group: 'org.hamcrest', name: 'hamcrest-all', version: '1.3'
    testImplementation group: 'org.hamcrest', name: 'hamcrest', version: '2.2'
    testImplementation group: 'com.github.tomakehurst', name: 'wiremock', version: '2.27.2'
    testImplementation "org.junit.jupiter:junit-jupiter:$junitVersion"
    testImplementation group: 'org.junit.jupiter', name: 'junit-jupiter-api', version: '5.9.2'
    testImplementation 'org.mockito:mockito-junit-jupiter:4.3.1'
    testImplementation 'org.mockito:mockito-inline:4.3.1'
    testRuntimeOnly "org.junit.jupiter:junit-jupiter-engine:$junitVersion"

	testCompile 'junit:junit:4.12'
}

test {
    useJUnitPlatform()
}


/************************************************************
 * Ensuring source directories are created if they do not 
 * already exist when running 'gradle eclipse'
 */
eclipse {
   classpath {
      file {
         tasks.eclipse.dependsOn(cleanEclipseClasspath)
         tasks.eclipse.dependsOn("create-dirs")
      }
   }
}



/************************************************************
 * This task should be used when creating a new project as
 * it will create all source and resource directories.  This
 * task is automatically executed during the 
 * 'gradle eclipse' command.
 */
task "create-dirs" {
   doLast {
      sourceSets*.java.srcDirs*.each { it.mkdirs() }
      sourceSets*.resources.srcDirs*.each { it.mkdirs() }
   }
}

javadoc {
//   exclude "**/utils/**"
}

test {
    //test are not run for now because we can't figure out how to 
    //run tests that require live data backends and credentials
    //as part of a portable automaoted build/test process
    //there are many many test but right now, the easiest way
    //to run them is from eclipse.
    exclude '**/*'
}

task demo1(type: JavaExec) {
    classpath = sourceSets.main.runtimeClasspath
    main = "io.rocketpartners.cloud.demo.Demo001SqlDbNorthwind"
}



